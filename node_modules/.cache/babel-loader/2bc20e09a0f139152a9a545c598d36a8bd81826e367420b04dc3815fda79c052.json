{"ast":null,"code":"var _jsxFileName = \"/Users/adamhayes/RotationHelper/src/components/PlayerOnCourtWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport './Player.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//TODO: consolidate with PlayerInRosterwidget\n\n//TODO: fix drag and drop bugs\n\nfunction PlayerOnCourtWidget({\n  player,\n  key\n}) {\n  _s();\n  console.log(player);\n  debugger;\n  const storedPlayer = useRef(player);\n\n  //TODO: consider source of player when player is being dragged and dropped. (i.e. roster, or court)\n  function onDragStart(event) {\n    event.dataTransfer.setData(\"player-data\", storedPlayer.current.toString());\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    draggable: true,\n    onDragStart: onDragStart,\n    className: \"Player \" + player.getPlayerType().getKey,\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      className: \"PlayerType\",\n      children: [\" \", player.getPlayerType().getLabel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"PlayerName\",\n      children: player.getName()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerOnCourtWidget, \"rofoR5Cb9orxLPY3uNzYW6mVI/8=\");\n_c = PlayerOnCourtWidget;\nexport default PlayerOnCourtWidget;\nvar _c;\n$RefreshReg$(_c, \"PlayerOnCourtWidget\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","PlayerOnCourtWidget","player","key","_s","console","log","storedPlayer","onDragStart","event","dataTransfer","setData","current","toString","draggable","className","getPlayerType","getKey","children","getLabel","fileName","_jsxFileName","lineNumber","columnNumber","getName","_c","$RefreshReg$"],"sources":["/Users/adamhayes/RotationHelper/src/components/PlayerOnCourtWidget.tsx"],"sourcesContent":["import React, { MutableRefObject, useRef } from 'react';\nimport './Player.css';\nimport { Player } from './Player';\nimport { IPlayerProps } from './IProps';\nimport { Position } from '../enums/Position';\n\n \n//TODO: consolidate with PlayerInRosterwidget\n\n//TODO: fix drag and drop bugs\n\nfunction PlayerOnCourtWidget({player, key} :IPlayerProps) {\n  console.log(player);\n  debugger;\n  const storedPlayer:MutableRefObject<Player> = useRef(player);\n\n  //TODO: consider source of player when player is being dragged and dropped. (i.e. roster, or court)\n  function onDragStart(event:React.DragEvent) {\n    event.dataTransfer.setData(\"player-data\", storedPlayer.current.toString());\n  }\n\n  return (\n    <div draggable onDragStart={onDragStart} className={\"Player \" + player.getPlayerType().getKey}>\n        <strong className='PlayerType'> {player.getPlayerType().getLabel}</strong>\n        <p className='PlayerName'>{player.getName()}</p>\n    </div>\n  );\n}\n\nexport default PlayerOnCourtWidget;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAsBC,MAAM,QAAQ,OAAO;AACvD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMtB;;AAEA;;AAEA,SAASC,mBAAmBA,CAAC;EAACC,MAAM;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EACxDC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EACnB;EACA,MAAMK,YAAqC,GAAGT,MAAM,CAACI,MAAM,CAAC;;EAE5D;EACA,SAASM,WAAWA,CAACC,KAAqB,EAAE;IAC1CA,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEJ,YAAY,CAACK,OAAO,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC5E;EAEA,oBACEb,OAAA;IAAKc,SAAS;IAACN,WAAW,EAAEA,WAAY;IAACO,SAAS,EAAE,SAAS,GAAGb,MAAM,CAACc,aAAa,CAAC,CAAC,CAACC,MAAO;IAAAC,QAAA,gBAC1FlB,OAAA;MAAQe,SAAS,EAAC,YAAY;MAAAG,QAAA,GAAC,GAAC,EAAChB,MAAM,CAACc,aAAa,CAAC,CAAC,CAACG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAC1EvB,OAAA;MAAGe,SAAS,EAAC,YAAY;MAAAG,QAAA,EAAEhB,MAAM,CAACsB,OAAO,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAACnB,EAAA,CAhBQH,mBAAmB;AAAAwB,EAAA,GAAnBxB,mBAAmB;AAkB5B,eAAeA,mBAAmB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}