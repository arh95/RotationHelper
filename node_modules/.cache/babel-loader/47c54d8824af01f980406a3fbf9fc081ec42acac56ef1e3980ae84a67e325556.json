{"ast":null,"code":"import React from'react';import'./App.css';import CourtComponent from'./components/CourtComponent';import Button from'@mui/material/Button';import html2canvas from\"html2canvas\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//TODO: drag and drop players from sidelines to court\n//TODO: link standby player types with their on-court replacements\n//    cont: standby link should also indicate serve or no serve\n//    cont: with special consideratoin for liberos, who can swap out for another player type\n//TODO: design idea: make rotation state retreivable based on team name/unique identifier\n//-> mongoDB connection, or make it simple username/password profile access\nfunction exportRotation(){const rotation=document.getElementById(\"court-widget\");exportAsImage(rotation,\"rotation.png\");}//from https://blog.logrocket.com/export-react-components-as-images-html2canvas/#what-is-html2-canvas\nasync function exportAsImage(el,imageFileName){const canvas=await html2canvas(el);const image=canvas.toDataURL(\"image/png\",1.0);downloadImage(image,imageFileName);};function downloadImage(blob,fileName){const fakeLink=window.document.createElement(\"a\");fakeLink.download=fileName;fakeLink.href=blob;document.body.appendChild(fakeLink);fakeLink.click();document.body.removeChild(fakeLink);fakeLink.remove();};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Rotation Tool\"}),/*#__PURE__*/_jsx(CourtComponent,{}),/*#__PURE__*/_jsx(Button,{onClick:exportRotation,children:\"Save Rotation Snapshot\"})]});}export default App;","map":{"version":3,"names":["React","CourtComponent","Button","html2canvas","jsx","_jsx","jsxs","_jsxs","App","exportRotation","rotation","document","getElementById","exportAsImage","el","imageFileName","canvas","image","toDataURL","downloadImage","blob","fileName","fakeLink","window","createElement","download","href","body","appendChild","click","removeChild","remove","className","children","onClick"],"sources":["/Users/adamhayes/RotationHelper/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CourtComponent from './components/CourtComponent';\nimport Button from '@mui/material/Button';\nimport html2canvas from \"html2canvas\";\n\nfunction App() {\n\n  //TODO: drag and drop players from sidelines to court\n  //TODO: link standby player types with their on-court replacements\n  //    cont: standby link should also indicate serve or no serve\n  //    cont: with special consideratoin for liberos, who can swap out for another player type\n\n\n  //TODO: design idea: make rotation state retreivable based on team name/unique identifier\n  //-> mongoDB connection, or make it simple username/password profile access\n  function exportRotation(): void {\n    const rotation = document.getElementById(\"court-widget\")!;\n    exportAsImage(rotation, \"rotation.png\")\n\n  }\n\n  //from https://blog.logrocket.com/export-react-components-as-images-html2canvas/#what-is-html2-canvas\n  async function exportAsImage(el:HTMLElement, imageFileName:string) {\n    const canvas = await html2canvas(el);\n    const image = canvas.toDataURL(\"image/png\", 1.0);\n    downloadImage(image, imageFileName);\n  }; \n\n  function downloadImage(blob:string, fileName:string){\n    const fakeLink = window.document.createElement(\"a\");\n    \n    fakeLink.download = fileName;\n\n    fakeLink.href = blob;\n\n    document.body.appendChild(fakeLink);\n    fakeLink.click();\n    document.body.removeChild(fakeLink);\n\n    fakeLink.remove();\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>\n        Rotation Tool\n      </h2>\n      <CourtComponent />\n      <Button onClick={exportRotation}>\n        Save Rotation Snapshot\n      </Button>\n      {\n        /*\n        Introduce serve/receive view toggle\n        */\n      }\n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,WAAW,CAClB,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,WAAW,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEb;AACA;AACA;AACA;AAGA;AACA;AACA,QAAS,CAAAC,cAAcA,CAAA,CAAS,CAC9B,KAAM,CAAAC,QAAQ,CAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAE,CACzDC,aAAa,CAACH,QAAQ,CAAE,cAAc,CAAC,CAEzC,CAEA;AACA,cAAe,CAAAG,aAAaA,CAACC,EAAc,CAAEC,aAAoB,CAAE,CACjE,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAb,WAAW,CAACW,EAAE,CAAC,CACpC,KAAM,CAAAG,KAAK,CAAGD,MAAM,CAACE,SAAS,CAAC,WAAW,CAAE,GAAG,CAAC,CAChDC,aAAa,CAACF,KAAK,CAAEF,aAAa,CAAC,CACrC,CAAC,CAED,QAAS,CAAAI,aAAaA,CAACC,IAAW,CAAEC,QAAe,CAAC,CAClD,KAAM,CAAAC,QAAQ,CAAGC,MAAM,CAACZ,QAAQ,CAACa,aAAa,CAAC,GAAG,CAAC,CAEnDF,QAAQ,CAACG,QAAQ,CAAGJ,QAAQ,CAE5BC,QAAQ,CAACI,IAAI,CAAGN,IAAI,CAEpBT,QAAQ,CAACgB,IAAI,CAACC,WAAW,CAACN,QAAQ,CAAC,CACnCA,QAAQ,CAACO,KAAK,CAAC,CAAC,CAChBlB,QAAQ,CAACgB,IAAI,CAACG,WAAW,CAACR,QAAQ,CAAC,CAEnCA,QAAQ,CAACS,MAAM,CAAC,CAAC,CACnB,CAAC,CAED,mBACExB,KAAA,QAAKyB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB5B,IAAA,OAAA4B,QAAA,CAAI,eAEJ,CAAI,CAAC,cACL5B,IAAA,CAACJ,cAAc,GAAE,CAAC,cAClBI,IAAA,CAACH,MAAM,EAACgC,OAAO,CAAEzB,cAAe,CAAAwB,QAAA,CAAC,wBAEjC,CAAQ,CAAC,EAMN,CAAC,CAGV,CAEA,cAAe,CAAAzB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}