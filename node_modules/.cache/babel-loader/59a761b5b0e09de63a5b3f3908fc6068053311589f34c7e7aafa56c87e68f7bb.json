{"ast":null,"code":"import { Player } from \"./Player\";\nimport { Position } from \"../enums/Position\";\nexport class DragAndDropPlayer extends Player {\n  constructor(player, boolean) {\n    super(player.getName(), player.getPlayerType(), player.getCurrentPosition());\n    this.source = void 0;\n    this.setNumber(player.getNumber());\n    this.setPlayerLink(player.getPlayerLink());\n    this.setOnCourt(player.isOnCourt());\n    this.setServing(player.isServing());\n  }\n  getSource() {\n    return this.source;\n  }\n  setSource(source) {\n    this.source = source;\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  static revive(playerToRevive) {\n    let revivedPlayer = new DragAndDropPlayer(this.reviveRecursive(playerToRevive, false));\n    revivedPlayer.setSource(playerToRevive.getSource());\n    return revivedPlayer;\n  }\n  static reviveRecursive(playerToRevive, isPlayerLink) {\n    let revivedPosition = Position.revive(playerToRevive.playerType);\n    let revivedPlayer = new DragAndDropPlayer(playerToRevive);\n    revivedPlayer.setOnCourt(playerToRevive.onCourt);\n    revivedPlayer.setNumber(playerToRevive.num);\n    revivedPlayer.setServing(playerToRevive.serving);\n    if (!isPlayerLink && playerToRevive.playerLink !== undefined) {\n      revivedPlayer.setPlayerLink(this.reviveRecursive(playerToRevive.playerLink, true));\n    }\n    return revivedPlayer;\n  }\n}","map":{"version":3,"names":["Player","Position","DragAndDropPlayer","constructor","player","boolean","getName","getPlayerType","getCurrentPosition","source","setNumber","getNumber","setPlayerLink","getPlayerLink","setOnCourt","isOnCourt","setServing","isServing","getSource","setSource","toString","JSON","stringify","revive","playerToRevive","revivedPlayer","reviveRecursive","isPlayerLink","revivedPosition","playerType","onCourt","num","serving","playerLink","undefined"],"sources":["/Users/adamhayes/RotationHelper/src/components/DragAndDropPlayer.tsx"],"sourcesContent":["import { Player } from \"./Player\";\nimport { Position } from \"../enums/Position\";\n\nexport class DragAndDropPlayer extends Player {\n    source:string;\n\n    constructor (player:Player, boolean) {\n    \n\n        super(player.getName(), player.getPlayerType(), player.getCurrentPosition());\n        this.setNumber(player.getNumber());\n        this.setPlayerLink(player.getPlayerLink());\n        this.setOnCourt(player.isOnCourt());\n        this.setServing(player.isServing());\n    }\n\n    public getSource():string {\n        return this.source;\n    }\n\n    public setSource(source:string): void\n    {\n        this.source = source;\n    }\n\n    public toString(): string {\n        return JSON.stringify(this);\n    }\n\n    public static revive(playerToRevive:DragAndDropPlayer):DragAndDropPlayer {\n        \n        let revivedPlayer: DragAndDropPlayer = new DragAndDropPlayer(this.reviveRecursive(playerToRevive as Player, false));\n        revivedPlayer.setSource(playerToRevive.getSource());\n        return revivedPlayer;\n    }\n\n    private static reviveRecursive(playerToRevive:Player, isPlayerLink:boolean):Player\n    {\n        let revivedPosition = Position.revive(playerToRevive.playerType);\n        let revivedPlayer = new DragAndDropPlayer(playerToRevive);\n        revivedPlayer.setOnCourt(playerToRevive.onCourt);\n        \n        revivedPlayer.setNumber(playerToRevive.num);\n        revivedPlayer.setServing(playerToRevive.serving);\n        if (!isPlayerLink && playerToRevive.playerLink !== undefined) {\n            revivedPlayer.setPlayerLink(this.reviveRecursive(playerToRevive.playerLink, true));\n        }\n        return revivedPlayer;\n    }\n\n}"],"mappings":"AAAA,SAASA,MAAM,QAAQ,UAAU;AACjC,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,OAAO,MAAMC,iBAAiB,SAASF,MAAM,CAAC;EAG1CG,WAAWA,CAAEC,MAAa,EAAEC,OAAO,EAAE;IAGjC,KAAK,CAACD,MAAM,CAACE,OAAO,CAAC,CAAC,EAAEF,MAAM,CAACG,aAAa,CAAC,CAAC,EAAEH,MAAM,CAACI,kBAAkB,CAAC,CAAC,CAAC;IAAC,KALjFC,MAAM;IAMF,IAAI,CAACC,SAAS,CAACN,MAAM,CAACO,SAAS,CAAC,CAAC,CAAC;IAClC,IAAI,CAACC,aAAa,CAACR,MAAM,CAACS,aAAa,CAAC,CAAC,CAAC;IAC1C,IAAI,CAACC,UAAU,CAACV,MAAM,CAACW,SAAS,CAAC,CAAC,CAAC;IACnC,IAAI,CAACC,UAAU,CAACZ,MAAM,CAACa,SAAS,CAAC,CAAC,CAAC;EACvC;EAEOC,SAASA,CAAA,EAAU;IACtB,OAAO,IAAI,CAACT,MAAM;EACtB;EAEOU,SAASA,CAACV,MAAa,EAC9B;IACI,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EAEOW,QAAQA,CAAA,EAAW;IACtB,OAAOC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC;EAC/B;EAEA,OAAcC,MAAMA,CAACC,cAAgC,EAAoB;IAErE,IAAIC,aAAgC,GAAG,IAAIvB,iBAAiB,CAAC,IAAI,CAACwB,eAAe,CAACF,cAAc,EAAY,KAAK,CAAC,CAAC;IACnHC,aAAa,CAACN,SAAS,CAACK,cAAc,CAACN,SAAS,CAAC,CAAC,CAAC;IACnD,OAAOO,aAAa;EACxB;EAEA,OAAeC,eAAeA,CAACF,cAAqB,EAAEG,YAAoB,EAC1E;IACI,IAAIC,eAAe,GAAG3B,QAAQ,CAACsB,MAAM,CAACC,cAAc,CAACK,UAAU,CAAC;IAChE,IAAIJ,aAAa,GAAG,IAAIvB,iBAAiB,CAACsB,cAAc,CAAC;IACzDC,aAAa,CAACX,UAAU,CAACU,cAAc,CAACM,OAAO,CAAC;IAEhDL,aAAa,CAACf,SAAS,CAACc,cAAc,CAACO,GAAG,CAAC;IAC3CN,aAAa,CAACT,UAAU,CAACQ,cAAc,CAACQ,OAAO,CAAC;IAChD,IAAI,CAACL,YAAY,IAAIH,cAAc,CAACS,UAAU,KAAKC,SAAS,EAAE;MAC1DT,aAAa,CAACb,aAAa,CAAC,IAAI,CAACc,eAAe,CAACF,cAAc,CAACS,UAAU,EAAE,IAAI,CAAC,CAAC;IACtF;IACA,OAAOR,aAAa;EACxB;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}