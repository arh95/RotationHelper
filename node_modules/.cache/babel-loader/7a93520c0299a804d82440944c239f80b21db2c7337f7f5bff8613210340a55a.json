{"ast":null,"code":"var _jsxFileName = \"/Users/adamhayes/RotationHelper/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport CourtComponent from './components/CourtComponent';\nimport Button from '@mui/material/Button';\nimport html2canvas from \"html2canvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  //TODO: drag and drop players from sidelines to court\n  //TODO: link standby player types with their on-court replacements\n  //    cont: standby link should also indicate serve or no serve\n  //    cont: with special consideratoin for liberos, who can swap out for another player type\n\n  //TODO: design idea: make rotation state retreivable based on team name/unique identifier\n  //-> mongoDB connection, or make it simple username/password profile access\n  function exportRotation() {\n    const rotation = document.getElementById(\"court-widget\");\n    exportAsImage(rotation, \"rotation.png\");\n  }\n\n  //from https://blog.logrocket.com/export-react-components-as-images-html2canvas/#what-is-html2-canvas\n  async function exportAsImage(el, imageFileName) {\n    const canvas = await html2canvas(el);\n    const image = canvas.toDataURL(\"image/png\", 1.0);\n    downloadImage(image, imageFileName);\n  }\n  ;\n  function downloadImage(blob, fileName) {\n    const fakeLink = window.document.createElement(\"a\");\n    fakeLink.download = fileName;\n    fakeLink.href = blob;\n    document.body.appendChild(fakeLink);\n    fakeLink.click();\n    document.body.removeChild(fakeLink);\n    fakeLink.remove();\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Rotation Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CourtComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: exportRotation,\n      children: \"Save Rotation Snapshot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","CourtComponent","Button","html2canvas","jsxDEV","_jsxDEV","App","exportRotation","rotation","document","getElementById","exportAsImage","el","imageFileName","canvas","image","toDataURL","downloadImage","blob","fileName","fakeLink","window","createElement","download","href","body","appendChild","click","removeChild","remove","className","children","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/adamhayes/RotationHelper/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CourtComponent from './components/CourtComponent';\nimport Button from '@mui/material/Button';\nimport html2canvas from \"html2canvas\";\n\nfunction App() {\n\n  //TODO: drag and drop players from sidelines to court\n  //TODO: link standby player types with their on-court replacements\n  //    cont: standby link should also indicate serve or no serve\n  //    cont: with special consideratoin for liberos, who can swap out for another player type\n\n\n  //TODO: design idea: make rotation state retreivable based on team name/unique identifier\n  //-> mongoDB connection, or make it simple username/password profile access\n  function exportRotation(): void {\n    const rotation = document.getElementById(\"court-widget\")!;\n    exportAsImage(rotation, \"rotation.png\")\n\n  }\n\n  //from https://blog.logrocket.com/export-react-components-as-images-html2canvas/#what-is-html2-canvas\n  async function exportAsImage(el:HTMLElement, imageFileName:string) {\n    const canvas = await html2canvas(el);\n    const image = canvas.toDataURL(\"image/png\", 1.0);\n    downloadImage(image, imageFileName);\n  }; \n\n  function downloadImage(blob:string, fileName:string){\n    const fakeLink = window.document.createElement(\"a\");\n    \n    fakeLink.download = fileName;\n\n    fakeLink.href = blob;\n\n    document.body.appendChild(fakeLink);\n    fakeLink.click();\n    document.body.removeChild(fakeLink);\n\n    fakeLink.remove();\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>\n        Rotation Tool\n      </h2>\n      <CourtComponent />\n      <Button onClick={exportRotation}>\n        Save Rotation Snapshot\n      </Button>\n      {\n        /*\n        Introduce serve/receive view toggle\n        */\n      }\n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,WAAW;AAClB,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAEb;EACA;EACA;EACA;;EAGA;EACA;EACA,SAASC,cAAcA,CAAA,EAAS;IAC9B,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAE;IACzDC,aAAa,CAACH,QAAQ,EAAE,cAAc,CAAC;EAEzC;;EAEA;EACA,eAAeG,aAAaA,CAACC,EAAc,EAAEC,aAAoB,EAAE;IACjE,MAAMC,MAAM,GAAG,MAAMX,WAAW,CAACS,EAAE,CAAC;IACpC,MAAMG,KAAK,GAAGD,MAAM,CAACE,SAAS,CAAC,WAAW,EAAE,GAAG,CAAC;IAChDC,aAAa,CAACF,KAAK,EAAEF,aAAa,CAAC;EACrC;EAAC;EAED,SAASI,aAAaA,CAACC,IAAW,EAAEC,QAAe,EAAC;IAClD,MAAMC,QAAQ,GAAGC,MAAM,CAACZ,QAAQ,CAACa,aAAa,CAAC,GAAG,CAAC;IAEnDF,QAAQ,CAACG,QAAQ,GAAGJ,QAAQ;IAE5BC,QAAQ,CAACI,IAAI,GAAGN,IAAI;IAEpBT,QAAQ,CAACgB,IAAI,CAACC,WAAW,CAACN,QAAQ,CAAC;IACnCA,QAAQ,CAACO,KAAK,CAAC,CAAC;IAChBlB,QAAQ,CAACgB,IAAI,CAACG,WAAW,CAACR,QAAQ,CAAC;IAEnCA,QAAQ,CAACS,MAAM,CAAC,CAAC;EACnB;EAAC;EAED,oBACExB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1B,OAAA;MAAA0B,QAAA,EAAI;IAEJ;MAAAZ,QAAA,EAAAa,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL7B,OAAA,CAACJ,cAAc;MAAAkB,QAAA,EAAAa,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClB7B,OAAA,CAACH,MAAM;MAACiC,OAAO,EAAE5B,cAAe;MAAAwB,QAAA,EAAC;IAEjC;MAAAZ,QAAA,EAAAa,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAf,QAAA,EAAAa,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMN,CAAC;AAGV;AAACE,EAAA,GAtDQ9B,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}