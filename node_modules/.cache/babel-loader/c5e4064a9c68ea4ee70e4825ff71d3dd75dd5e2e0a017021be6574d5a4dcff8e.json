{"ast":null,"code":"var _Position;\nexport class Position {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n  get getKey() {\n    return this.key;\n  }\n  get getLabel() {\n    return this.value;\n  }\n  static getValidPositions() {\n    return [Position.SETTER, Position.OUTSIDE, Position.MIDDLE, Position.OPPO, Position.LIBERO, Position.DEFSPEC, Position.SERVESPEC];\n  }\n  static getPositionByKey(key) {\n    let position = Position.NONE;\n    if (key === Position.SETTER.getKey) {\n      position = Position.SETTER;\n    } else if (key === Position.OUTSIDE.getKey) {\n      position = Position.OUTSIDE;\n    } else if (key === Position.MIDDLE.getKey) {\n      position = Position.MIDDLE;\n    } else if (key === Position.OPPO.getKey) {\n      position = Position.OPPO;\n    } else if (key === Position.LIBERO.getKey) {\n      position = Position.LIBERO;\n    } else if (key === Position.DEFSPEC.getKey) {\n      position = Position.DEFSPEC;\n    } else if (key === Position.SERVESPEC.getKey) {\n      position = Position.SERVESPEC;\n    }\n    return position;\n  }\n  static getPositionKey(position) {\n    return Object.keys(Position)[Object.values(Position).indexOf(position)];\n  }\n  static revive(position) {\n    return this.getPositionByKey(position.key);\n  }\n}\n_Position = Position;\n//'enum' in the sense that it's a static set of vlaues to be accessed. The Javascript/Typescript enum functionality was \n//lacking when it came to being able to store and access mulitple values on a given enum entry\n//TODO locate stack overflow article for credit\nPosition.SETTER = new _Position(\"S\", \"Setter\");\nPosition.OUTSIDE = new _Position(\"OH\", \"Outside Hitter\");\nPosition.MIDDLE = new _Position(\"M\", \"Middle Blocker\");\nPosition.OPPO = new _Position(\"OPP\", \"Opposite\");\nPosition.DEFSPEC = new _Position(\"DS\", \"Defensive Specialist\");\nPosition.LIBERO = new _Position(\"L\", \"Libero\");\nPosition.SERVESPEC = new _Position(\"SS\", \"Serving Specialist\");\nPosition.NONE = new _Position(\"NONE\", \"No position specified\");","map":{"version":3,"names":["Position","constructor","key","value","getKey","getLabel","getValidPositions","SETTER","OUTSIDE","MIDDLE","OPPO","LIBERO","DEFSPEC","SERVESPEC","getPositionByKey","position","NONE","getPositionKey","Object","keys","values","indexOf","revive","_Position"],"sources":["/Users/adamhayes/RotationHelper/src/enums/Position.tsx"],"sourcesContent":["\nexport class Position {\n\n    \n    //'enum' in the sense that it's a static set of vlaues to be accessed. The Javascript/Typescript enum functionality was \n    //lacking when it came to being able to store and access mulitple values on a given enum entry\n    //TODO locate stack overflow article for credit\n\n\n    static readonly SETTER = new Position(\"S\", \"Setter\");\n    static readonly OUTSIDE = new Position(\"OH\", \"Outside Hitter\");\n    static readonly MIDDLE = new Position(\"M\", \"Middle Blocker\");\n    static readonly OPPO = new Position(\"OPP\", \"Opposite\");\n    static readonly DEFSPEC = new Position(\"DS\", \"Defensive Specialist\");\n    static readonly LIBERO = new Position(\"L\", \"Libero\");\n    static readonly SERVESPEC = new Position(\"SS\", \"Serving Specialist\");\n    static readonly NONE = new Position(\"NONE\", \"No position specified\");\n\n    private constructor(public readonly key: string, public readonly value: string) {\n\n    }\n\n    get getKey(): string {\n        return this.key;\n    }\n\n    get getLabel(): string {\n        return this.value;\n    }\n\n    static getValidPositions(): Position[] {\n        return [Position.SETTER, Position.OUTSIDE, Position.MIDDLE, Position.OPPO, Position.LIBERO, Position.DEFSPEC, Position.SERVESPEC];\n    }\n\n    static getPositionByKey(key: string): Position {\n        let position: Position = Position.NONE;\n        if (key === Position.SETTER.getKey) {\n            position = Position.SETTER;\n        } else if (key === Position.OUTSIDE.getKey) {\n            position = Position.OUTSIDE;\n        } else if (key === Position.MIDDLE.getKey) {\n            position = Position.MIDDLE;\n        } else if (key === Position.OPPO.getKey) {\n            position = Position.OPPO;\n        } else if (key === Position.LIBERO.getKey) {\n            position = Position.LIBERO;\n        } else if (key === Position.DEFSPEC.getKey) {\n            position = Position.DEFSPEC;\n        } else if (key === Position.SERVESPEC.getKey) {\n            position = Position.SERVESPEC;\n        }\n\n        return position;\n    }\n    static getPositionKey(position: Position): string {\n        return Object.keys(Position)[Object.values(Position).indexOf(position)];\n    }\n\n    static revive(position:Position): Position\n    {\n        return this.getPositionByKey(position.key);\n    }\n\n}\n\n\n\n\n"],"mappings":";AACA,OAAO,MAAMA,QAAQ,CAAC;EAiBVC,WAAWA,CAAiBC,GAAW,EAAkBC,KAAa,EAAE;IAAA,KAA5CD,GAAW,GAAXA,GAAW;IAAA,KAAkBC,KAAa,GAAbA,KAAa;EAE9E;EAEA,IAAIC,MAAMA,CAAA,EAAW;IACjB,OAAO,IAAI,CAACF,GAAG;EACnB;EAEA,IAAIG,QAAQA,CAAA,EAAW;IACnB,OAAO,IAAI,CAACF,KAAK;EACrB;EAEA,OAAOG,iBAAiBA,CAAA,EAAe;IACnC,OAAO,CAACN,QAAQ,CAACO,MAAM,EAAEP,QAAQ,CAACQ,OAAO,EAAER,QAAQ,CAACS,MAAM,EAAET,QAAQ,CAACU,IAAI,EAAEV,QAAQ,CAACW,MAAM,EAAEX,QAAQ,CAACY,OAAO,EAAEZ,QAAQ,CAACa,SAAS,CAAC;EACrI;EAEA,OAAOC,gBAAgBA,CAACZ,GAAW,EAAY;IAC3C,IAAIa,QAAkB,GAAGf,QAAQ,CAACgB,IAAI;IACtC,IAAId,GAAG,KAAKF,QAAQ,CAACO,MAAM,CAACH,MAAM,EAAE;MAChCW,QAAQ,GAAGf,QAAQ,CAACO,MAAM;IAC9B,CAAC,MAAM,IAAIL,GAAG,KAAKF,QAAQ,CAACQ,OAAO,CAACJ,MAAM,EAAE;MACxCW,QAAQ,GAAGf,QAAQ,CAACQ,OAAO;IAC/B,CAAC,MAAM,IAAIN,GAAG,KAAKF,QAAQ,CAACS,MAAM,CAACL,MAAM,EAAE;MACvCW,QAAQ,GAAGf,QAAQ,CAACS,MAAM;IAC9B,CAAC,MAAM,IAAIP,GAAG,KAAKF,QAAQ,CAACU,IAAI,CAACN,MAAM,EAAE;MACrCW,QAAQ,GAAGf,QAAQ,CAACU,IAAI;IAC5B,CAAC,MAAM,IAAIR,GAAG,KAAKF,QAAQ,CAACW,MAAM,CAACP,MAAM,EAAE;MACvCW,QAAQ,GAAGf,QAAQ,CAACW,MAAM;IAC9B,CAAC,MAAM,IAAIT,GAAG,KAAKF,QAAQ,CAACY,OAAO,CAACR,MAAM,EAAE;MACxCW,QAAQ,GAAGf,QAAQ,CAACY,OAAO;IAC/B,CAAC,MAAM,IAAIV,GAAG,KAAKF,QAAQ,CAACa,SAAS,CAACT,MAAM,EAAE;MAC1CW,QAAQ,GAAGf,QAAQ,CAACa,SAAS;IACjC;IAEA,OAAOE,QAAQ;EACnB;EACA,OAAOE,cAAcA,CAACF,QAAkB,EAAU;IAC9C,OAAOG,MAAM,CAACC,IAAI,CAACnB,QAAQ,CAAC,CAACkB,MAAM,CAACE,MAAM,CAACpB,QAAQ,CAAC,CAACqB,OAAO,CAACN,QAAQ,CAAC,CAAC;EAC3E;EAEA,OAAOO,MAAMA,CAACP,QAAiB,EAC/B;IACI,OAAO,IAAI,CAACD,gBAAgB,CAACC,QAAQ,CAACb,GAAG,CAAC;EAC9C;AAEJ;AAACqB,SAAA,GA9DYvB,QAAQ;AAGjB;AACA;AACA;AALSA,QAAQ,CAQDO,MAAM,GAAG,IAAIP,SAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC;AAR3CA,QAAQ,CASDQ,OAAO,GAAG,IAAIR,SAAQ,CAAC,IAAI,EAAE,gBAAgB,CAAC;AATrDA,QAAQ,CAUDS,MAAM,GAAG,IAAIT,SAAQ,CAAC,GAAG,EAAE,gBAAgB,CAAC;AAVnDA,QAAQ,CAWDU,IAAI,GAAG,IAAIV,SAAQ,CAAC,KAAK,EAAE,UAAU,CAAC;AAX7CA,QAAQ,CAYDY,OAAO,GAAG,IAAIZ,SAAQ,CAAC,IAAI,EAAE,sBAAsB,CAAC;AAZ3DA,QAAQ,CAaDW,MAAM,GAAG,IAAIX,SAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC;AAb3CA,QAAQ,CAcDa,SAAS,GAAG,IAAIb,SAAQ,CAAC,IAAI,EAAE,oBAAoB,CAAC;AAd3DA,QAAQ,CAeDgB,IAAI,GAAG,IAAIhB,SAAQ,CAAC,MAAM,EAAE,uBAAuB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}