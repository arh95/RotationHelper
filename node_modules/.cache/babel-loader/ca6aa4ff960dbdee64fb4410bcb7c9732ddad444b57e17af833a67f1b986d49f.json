{"ast":null,"code":"var _jsxFileName = \"/Users/adamhayes/RotationHelper/src/components/RosterWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { Position } from '../enums/Position';\nimport Button from '@mui/material/Button';\nimport './RosterWidget.css';\nimport AddPlayerModal from './AddPlayerModal';\nimport PlayerInRosterWidget from './PlayerInRosterWidget';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Roster() {\n  _s();\n  //TODO: this roster list gets \n  const [rosterList, setRosterList] = useState(new Array());\n  const [showAddPlayerModal, setShowAddPlayerModal] = useState(false);\n  const nextValidPlayerNumber = useRef(1);\n\n  //TODO: add collapse/expand roster section controls (introduce accordion panel?)\n\n  function sortedRosterList() {}\n  function addPlayerToRoster(newPlayer) {\n    if (newPlayer.n) newPlayer.setNumber();\n    let rosterListCopy = [];\n    Position.getValidPositions().forEach(position => {\n      console.log(position.getLabel);\n      let playersOfType = [];\n      for (let player of rosterList) {\n        if (player.getPlayerType().key == position.key) {\n          playersOfType.push(player);\n        }\n      }\n      if (newPlayer.getPlayerType() == position) {\n        console.log(\"MATCH\");\n        playersOfType.push(newPlayer);\n      }\n      rosterListCopy = rosterListCopy.concat(playersOfType);\n    });\n    console.log(rosterListCopy);\n    setRosterList(rosterListCopy);\n    console.log(rosterList);\n    displayAddPlayerModal(false);\n  }\n\n  //TODO: detection function to make sure that auto increment of player numbers goes smoothly, and takes into account team members that already exist\n\n  function displayAddPlayerModal(showModal) {\n    setShowAddPlayerModal(showModal);\n  }\n  function resetAddPlayerModal() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RosterWidget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RosterDisplay\",\n      children: rosterList.filter(plater => plater.isInRotation()).map((player, index) => /*#__PURE__*/_jsxDEV(PlayerInRosterWidget, {\n        player: player\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      id: \"showModal\",\n      onClick: () => displayAddPlayerModal(true),\n      children: \"Add Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddPlayerModal, {\n      isOpen: showAddPlayerModal,\n      cancelAction: value => {\n        displayAddPlayerModal(value);\n      },\n      submitAction: value => {\n        addPlayerToRoster(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(Roster, \"DMWazMnKVDypLNHZa2n+ozOZaeQ=\");\n_c = Roster;\nexport default Roster;\nvar _c;\n$RefreshReg$(_c, \"Roster\");","map":{"version":3,"names":["React","useRef","useState","Position","Button","AddPlayerModal","PlayerInRosterWidget","jsxDEV","_jsxDEV","Roster","_s","rosterList","setRosterList","Array","showAddPlayerModal","setShowAddPlayerModal","nextValidPlayerNumber","sortedRosterList","addPlayerToRoster","newPlayer","n","setNumber","rosterListCopy","getValidPositions","forEach","position","console","log","getLabel","playersOfType","player","getPlayerType","key","push","concat","displayAddPlayerModal","showModal","resetAddPlayerModal","className","children","filter","plater","isInRotation","map","index","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","isOpen","cancelAction","value","submitAction","_c","$RefreshReg$"],"sources":["/Users/adamhayes/RotationHelper/src/components/RosterWidget.tsx"],"sourcesContent":["import React, { MutableRefObject, useRef, useState } from 'react';\nimport { Player } from './Player';\nimport PlayerOnCourtWidget from './PlayerOnCourtWidget';\nimport { Position } from '../enums/Position';\nimport Button from '@mui/material/Button';\n\nimport './RosterWidget.css';\nimport Modal from 'react-modal';\nimport AddPlayerModal from './AddPlayerModal';\nimport PlayerInRosterWidget from './PlayerInRosterWidget';\n\nfunction Roster() {\n    //TODO: this roster list gets \n    const [rosterList, setRosterList] = useState(new Array<Player>());\n    const [showAddPlayerModal, setShowAddPlayerModal] = useState(false);\n    const nextValidPlayerNumber:MutableRefObject<number> = useRef(1);\n\n    //TODO: add collapse/expand roster section controls (introduce accordion panel?)\n\n    function sortedRosterList() {\n\n    }\n\n    function addPlayerToRoster(newPlayer: Player) {\n\n        if (newPlayer.n)\n        newPlayer.setNumber()\n        let rosterListCopy: Player[] = [];\n        Position.getValidPositions().forEach((position) => {\n            console.log(position.getLabel);\n            let playersOfType: Player[] = [];\n            for (let player of rosterList) {\n                if (player.getPlayerType().key == position.key) {\n                    playersOfType.push(player);\n                }\n            }\n            if (newPlayer.getPlayerType() == position) {\n                console.log(\"MATCH\");\n                playersOfType.push(newPlayer);\n            }\n            rosterListCopy = rosterListCopy.concat(playersOfType);\n        });\n        console.log(rosterListCopy);\n        setRosterList(rosterListCopy);\n        console.log(rosterList);\n        displayAddPlayerModal(false);\n    }\n\n    //TODO: detection function to make sure that auto increment of player numbers goes smoothly, and takes into account team members that already exist\n\n    function displayAddPlayerModal(showModal: boolean) {\n        setShowAddPlayerModal(showModal);\n    }\n\n    function resetAddPlayerModal() {\n\n    }\n\n\n\n\n\n    return (\n        <div className=\"RosterWidget\">\n\n            <div className='RosterDisplay'>\n\n                {rosterList.filter((plater:Player) => plater.isInRotation()).map((player: Player, index) => (\n                    <PlayerInRosterWidget key={index} player={player} />\n                ))}\n            </div>\n            <Button id='showModal' onClick={() => displayAddPlayerModal(true)}>\n                Add Player\n            </Button>\n            <AddPlayerModal isOpen={showAddPlayerModal} cancelAction={(value: boolean) => { displayAddPlayerModal(value) }} submitAction={(value: Player) => { addPlayerToRoster(value) }} />\n        </div>\n    );\n}\n\nexport default Roster;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}