{"ast":null,"code":"import { Player } from \"./Player\";\nexport class DragAndDropPlayer extends Player {\n  constructor(player) {\n    super(player.name, player.playerType, player.currentPosition);\n    this.source = void 0;\n    this.setNumber(player.num);\n    this.setPlayerLink(player.playerLink);\n    this.setOnCourt(player.onCourt);\n    this.setServing(player.serving);\n    console.log(this);\n  }\n  getSource() {\n    return this.source;\n  }\n  setSource(source) {\n    this.source = source;\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n\n  // public static revive(playerToRevive:DragAndDropPlayer):DragAndDropPlayer {\n\n  //     let revivedPlayer: DragAndDropPlayer = new DragAndDropPlayer(this.reviveRecursive(playerToRevive as Player, false));\n  //     revivedPlayer.setSource(playerToRevive.source);\n  //     return revivedPlayer;\n  // }\n\n  // private static reviveRecursive(playerToRevive:Player, isPlayerLink:boolean):Player\n  // {\n  //     let revivedPosition = Position.revive(playerToRevive.playerType);\n  //     let revivedPlayer = new DragAndDropPlayer(playerToRevive);\n  //     revivedPlayer.setOnCourt(playerToRevive.onCourt);\n  //     revivedPlayer.setPlayerType(revivedPosition);\n  //     revivedPlayer.setNumber(playerToRevive.num);\n  //     revivedPlayer.setServing(playerToRevive.serving);\n  //     if (!isPlayerLink && playerToRevive.playerLink !== undefined) {\n  //         revivedPlayer.setPlayerLink(this.reviveRecursive(playerToRevive.playerLink, true));\n  //     }\n  //     return revivedPlayer;\n  // }\n}","map":{"version":3,"names":["Player","DragAndDropPlayer","constructor","player","name","playerType","currentPosition","source","setNumber","num","setPlayerLink","playerLink","setOnCourt","onCourt","setServing","serving","console","log","getSource","setSource","toString","JSON","stringify"],"sources":["/Users/adamhayes/RotationHelper/src/components/DragAndDropPlayer.tsx"],"sourcesContent":["import { Player } from \"./Player\";\nimport { Position } from \"../enums/Position\";\n\nexport class DragAndDropPlayer extends Player {\n    source:string;\n\n    constructor (player:Player) {\n        super(player.name, player.playerType, player.currentPosition);\n        this.setNumber(player.num);\n        this.setPlayerLink(player.playerLink);\n        this.setOnCourt(player.onCourt);\n        this.setServing(player.serving);\n        console.log(this);\n    }\n\n    public getSource():string {\n        return this.source;\n    }\n\n    public setSource(source:string): void\n    {\n        this.source = source;\n    }\n\n    public toString(): string {\n        return JSON.stringify(this);\n    }\n\n    // public static revive(playerToRevive:DragAndDropPlayer):DragAndDropPlayer {\n        \n    //     let revivedPlayer: DragAndDropPlayer = new DragAndDropPlayer(this.reviveRecursive(playerToRevive as Player, false));\n    //     revivedPlayer.setSource(playerToRevive.source);\n    //     return revivedPlayer;\n    // }\n\n    // private static reviveRecursive(playerToRevive:Player, isPlayerLink:boolean):Player\n    // {\n    //     let revivedPosition = Position.revive(playerToRevive.playerType);\n    //     let revivedPlayer = new DragAndDropPlayer(playerToRevive);\n    //     revivedPlayer.setOnCourt(playerToRevive.onCourt);\n    //     revivedPlayer.setPlayerType(revivedPosition);\n    //     revivedPlayer.setNumber(playerToRevive.num);\n    //     revivedPlayer.setServing(playerToRevive.serving);\n    //     if (!isPlayerLink && playerToRevive.playerLink !== undefined) {\n    //         revivedPlayer.setPlayerLink(this.reviveRecursive(playerToRevive.playerLink, true));\n    //     }\n    //     return revivedPlayer;\n    // }\n\n\n}"],"mappings":"AAAA,SAASA,MAAM,QAAQ,UAAU;AAGjC,OAAO,MAAMC,iBAAiB,SAASD,MAAM,CAAC;EAG1CE,WAAWA,CAAEC,MAAa,EAAE;IACxB,KAAK,CAACA,MAAM,CAACC,IAAI,EAAED,MAAM,CAACE,UAAU,EAAEF,MAAM,CAACG,eAAe,CAAC;IAAC,KAHlEC,MAAM;IAIF,IAAI,CAACC,SAAS,CAACL,MAAM,CAACM,GAAG,CAAC;IAC1B,IAAI,CAACC,aAAa,CAACP,MAAM,CAACQ,UAAU,CAAC;IACrC,IAAI,CAACC,UAAU,CAACT,MAAM,CAACU,OAAO,CAAC;IAC/B,IAAI,CAACC,UAAU,CAACX,MAAM,CAACY,OAAO,CAAC;IAC/BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACrB;EAEOC,SAASA,CAAA,EAAU;IACtB,OAAO,IAAI,CAACX,MAAM;EACtB;EAEOY,SAASA,CAACZ,MAAa,EAC9B;IACI,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EAEOa,QAAQA,CAAA,EAAW;IACtB,OAAOC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC;EAC/B;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAGJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}