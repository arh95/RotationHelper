{"ast":null,"code":"var _jsxFileName = \"/Users/adamhayes/RotationHelper/src/components/AddPlayerModal.tsx\",\n  _s = $RefreshSig$();\nimport Button from '@mui/material/Button';\nimport './AddPlayerModal.css';\nimport Modal from 'react-modal';\nimport { Player } from './Player';\nimport { Position } from '../enums/Position';\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddPlayerModal({\n  isOpen,\n  cancelAction,\n  submitAction\n}) {\n  _s();\n  const [options, setOptions] = useState(Position.getValidPositions());\n  const playerName = useRef(\"\");\n  const playerPosition = useRef(Position.NONE);\n  function createNewPlayer() {\n    let newPlayer = new Player(playerName.current, playerPosition.current, -1);\n    resetWidgetState();\n    return newPlayer;\n  }\n  function resetWidgetState() {\n    playerName.current = \"\";\n    playerPosition.current = Position.NONE;\n  }\n  function changePlayerPosition(event) {\n    let newPosition = Position.getPositionByKey(event.target.value);\n    playerPosition.current = newPosition;\n  }\n  function changePlayerName(event) {\n    playerName.current = event.target.value;\n  }\n  return (\n    /*#__PURE__*/\n    //TODO: accessibility needs, need appEl set\n    _jsxDEV(Modal, {\n      className: \"AddPlayerModal\",\n      isOpen: isOpen,\n      ariaHideApp: false,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ModalBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"AddPlayerForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Enter the player's name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"name\",\n              onChange: event => changePlayerName(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select the player's position:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"PositionSelect\",\n              defaultValue: Position.NONE.getKey,\n              onChange: event => changePlayerPosition(event),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: Position.NONE.getKey,\n                disabled: true,\n                children: \"Select a position:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this), options.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.getKey,\n                children: item.getLabel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ModalControls\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: \"CancelNewPlayer\",\n            onClick: () => {\n              resetWidgetState();\n              cancelAction(false);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"SubmitNewPlayer\",\n            onClick: () => submitAction(createNewPlayer()),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(AddPlayerModal, \"eRWEGlapkSdJ4z04X4uIATvRKBY=\");\n_c = AddPlayerModal;\nvar _c;\n$RefreshReg$(_c, \"AddPlayerModal\");","map":{"version":3,"names":["Button","Modal","Player","Position","useState","useRef","jsxDEV","_jsxDEV","AddPlayerModal","isOpen","cancelAction","submitAction","_s","options","setOptions","getValidPositions","playerName","playerPosition","NONE","createNewPlayer","newPlayer","current","resetWidgetState","changePlayerPosition","event","newPosition","getPositionByKey","target","value","changePlayerName","className","ariaHideApp","children","id","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","getKey","disabled","map","item","index","getLabel","onClick","_c","$RefreshReg$"],"sources":["/Users/adamhayes/RotationHelper/src/components/AddPlayerModal.tsx"],"sourcesContent":["import Button from '@mui/material/Button';\nimport './AddPlayerModal.css';\nimport Modal from 'react-modal';\nimport { IModalProps } from './IProps';\nimport { Player } from './Player';\nimport { Position } from '../enums/Position';\nimport { ChangeEventHandler, useState, useRef, MutableRefObject } from 'react';\n\nexport default function AddPlayerModal({ isOpen, cancelAction, submitAction }: IModalProps) {\n\n    const [options, setOptions]= useState(Position.getValidPositions());\n    const playerName:MutableRefObject<string> = useRef(\"\");\n    const playerPosition:MutableRefObject<Position> = useRef(Position.NONE);\n\n\n    function createNewPlayer(): Player {\n        let newPlayer: Player = new Player(playerName.current, playerPosition.current, -1);\n        resetWidgetState();\n        return newPlayer;\n    }\n\n    function resetWidgetState(): void {\n        playerName.current = \"\";\n        playerPosition.current = Position.NONE;\n    }\n\n    function changePlayerPosition(event:React.ChangeEvent<HTMLSelectElement>)\n    {\n        let newPosition:Position = Position.getPositionByKey(event.target.value);\n        playerPosition.current = newPosition;\n    }\n\n    function changePlayerName(event:React.ChangeEvent<HTMLInputElement>)\n    {\n        playerName.current = event.target.value;\n    }\n\n    return (\n        //TODO: accessibility needs, need appEl set\n        <Modal className='AddPlayerModal' isOpen={isOpen} ariaHideApp={false}>\n\n            <div id=\"ModalBody\">\n                <form className='AddPlayerForm'>\n                    <label>Enter the player's name:\n                        <input type='text' placeholder='name' onChange={(event) => changePlayerName(event)}/>\n                    </label>\n                    <br />\n                    <label>Select the player's position:\n                        <select id='PositionSelect' defaultValue={Position.NONE.getKey} onChange={(event) => changePlayerPosition(event)}>\n                            <option value={Position.NONE.getKey} disabled>Select a position:</option>\n                            {options.map((item: Position, index) => (\n                                <option value={item.getKey}>\n                                    {item.getLabel}\n                                </option>\n                            ))}\n                        </select>\n                    </label>\n\n{/* TODO: conditional form fields based on player type? (i.e. specialist, libero, have required player ) \nor prompt this when attemtping to add to court*/}\n                </form>\n\n                <div className='ModalControls'>\n                    <Button id='CancelNewPlayer' onClick={() =>  {\n                        resetWidgetState();\n                        cancelAction(false);\n                    }}>\n                        Cancel\n                    </Button>\n                    <Button id='SubmitNewPlayer' onClick={() => submitAction(createNewPlayer())}>\n                        Submit\n                    </Button>\n                </div>\n            </div>\n        </Modal >\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}